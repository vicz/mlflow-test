version: "3"

services:
  postgres:
    image: postgres:latest
    environment:
      - "POSTGRES_USER=mlflow"
      - "POSTGRES_PASSWORD=mlflow_pass"
    volumes: 
      - postgres_data:/var/lib/postgresql/data



  minio:
    image: quay.io/minio/minio:RELEASE.2023-02-22T18-23-45Z
    command: server --console-address ":9090"
    ports:
      - 9000:9000
      - 9090:9090
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio
    volumes:
      - minio_data:/mnt/data


  mlflow:
    build:
      context: .
      dockerfile: Dockerfile-mlflow
    ports:
      - "5000:5000"
    environment:
      - "BACKEND_URI=postgresql://mlflow:mlflow_pass@postgres:5432"
      - "MLFLOW_S3_ENDPOINT_URL=http://minio:9000"
      - "ARTIFACT_ROOT=s3://mlflow-artifacts/"
      - "AWS_ACCESS_KEY_ID=74cvoBegkXBHT7jJ"
      - "AWS_SECRET_ACCESS_KEY=RnCFp2DyrinPOMF8jtollC5fqvBiHcUY"
    depends_on:
      - postgres
      - minio

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile-jupyter
    command: [ "jupyter", "lab", "--allow-root", "--ip", "0.0.0.0" ]
    ports:
      - "8888:8888"
    environment:
      - "MLFLOW_S3_ENDPOINT_URL=http://minio:9000"
      - "ARTIFACT_ROOT=s3://mlflow-artifacts/"
      - "AWS_ACCESS_KEY_ID=74cvoBegkXBHT7jJ"
      - "AWS_SECRET_ACCESS_KEY=RnCFp2DyrinPOMF8jtollC5fqvBiHcUY"
    volumes:
      - ./notebook:/notebook

volumes:
  postgres_data:
  minio_data: